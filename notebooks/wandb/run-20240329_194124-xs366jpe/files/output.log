
 20%|███████████████████████████████████▏                                                                                                                                            | 1/5 [00:02<00:08,  2.11s/it]Traceback (most recent call last):
  File "/home/research/Columbia/codemath/notebooks/finetune_on_gsm8k.py", line 288, in <module>                                                                                              | 0/1 [00:00<?, ?it/s]
    trainer_stats = trainer.train()
                    ^^^^^^^^^^^^^^^
  File "/home/research/.conda/envs/torch/lib/python3.11/site-packages/trl/trainer/sft_trainer.py", line 360, in train
    output = super().train(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/research/.conda/envs/torch/lib/python3.11/site-packages/transformers/trainer.py", line 1624, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 422, in _fast_inner_training_loop
  File "/home/research/.conda/envs/torch/lib/python3.11/site-packages/transformers/trainer.py", line 2412, in _maybe_log_save_evaluate
    metrics = self.evaluate(ignore_keys=ignore_keys_for_eval)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/research/.conda/envs/torch/lib/python3.11/site-packages/transformers/trainer.py", line 3229, in evaluate
    output = eval_loop(
             ^^^^^^^^^^
  File "/home/research/.conda/envs/torch/lib/python3.11/site-packages/transformers/trainer.py", line 3520, in evaluation_loop
    metrics = self.compute_metrics(EvalPrediction(predictions=all_preds, label_ids=all_labels))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/research/Columbia/codemath/notebooks/finetune_on_gsm8k.py", line 281, in custom_metrics
    f1_mean = torch.tensor(f1s).mean().item()
              ^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: mean(): could not infer output dtype. Input dtype must be either a floating point or complex dtype. Got: Long
{'loss': 0.87, 'grad_norm': 1.1202062368392944, 'learning_rate': 4e-05, 'epoch': 1.0}
tensor([   13,   456,  2747,   302,  6382,   884,   659,   429,  2795, 28782,
        28748, 28734, 28733, 28705, 28750,   327, 28705, 28782, 28782, 28734,
        28734, 28748, 28750,  4060, 28782, 28734,  4060, 28723, 28734, 28723,
         2584,    13,   884, 28742, 28713,  4386, 20415,  2111,   559,  8660,
        28750, 28782,   398, 28705, 28750,   327,   429,  5275, 28740, 28782,
        28736, 28750, 28746, 28770, 28734,  4060, 28770, 28734, 28723,    13,
        17044,  2825,   369,  6382,   884,   659, 28705, 28740, 28734, 28734,
          387, 28705, 28782, 28734,   387, 28705, 28770, 28734,   327, 28705,
        28740, 28782,   327,   429,  5275, 28740, 28734, 28734, 28733, 28782,
        28734, 28733, 28770, 28734, 28733, 28740, 28782, 28746, 28740,  4060,
        28782,   680,  2445,    13,    13,  1064, 28740,    13])